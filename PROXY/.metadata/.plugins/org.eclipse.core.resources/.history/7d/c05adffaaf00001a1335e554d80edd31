
public class HasPin implements ATMState{

	ATMMachine atmMachine;

	public HasPin(ATMMachine newATMMachine) {
		atmMachine = newATMMachine;
	}
	@Override
	public void insertCard() {
		System.out.println("You already entered a card");
		
	}

	@Override
	public void ejectCard() {
		System.out.println("Your card is ejected");
		atmMachine.setATMState(atmMachine.getNoCardState());
		
	}

	@Override
	public void insertPin(int pinEntered) {

		System.out.println("You already entered a PIN");
		
	}

	@Override
	public void requestCash(int cashToWithdraw) {
		if(cashToWithdraw  > atmMachine.cashInMachine) {
			System.out.println("\nYou don't hanve that much cash available");
			System.out.println("Your card is ejected");
			atmMachine.setATMState(atmMachine.getNoCardState());
		} else {
			System.out.println("\n"+ cashToWithdraw + " is provided by the machine");
			atmMachine.setCashInMachine(atmMachine.cashInMachine - cashToWithdraw);
			System.out.println("\nCash in ATM Machine $" + atmMachine.getCashInMachine());
			
			System.out.println("Your card is ejected");
			atmMachine.setATMState(atmMachine.getNoCardState());
			
			if(atmMachine.cashInMachine <= 0) {
				atmMachine.setATMState(atmMachine.getNoCashState());
			}
		}
		
	}
	
}
